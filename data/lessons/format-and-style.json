{"lessonId":"format-and-style","lessonTitle":"Format and Style","lessonDescription":"SQL is really expressive. Here's a quick primer on SQL style and formatting.","lessonScreens":[{"screenText":"<p>Before we get too far into various SQL SELECT techniques, we should probably mention that SQL doesn&#39;t usually care about the formatting of your query.</p>\n<p>Spacing and capitalization can be used however you like, although this varies from database to database (remember, we&#39;re using PostgreSQL)</p>\n","keepSql":false,"sqlTarget":"","sqlExample":"","startingSql":"","screenNumber":0,"screenMd":"Before we get too far into various SQL SELECT techniques, we should probably mention that SQL doesn't usually care about the formatting of your query.\n\nSpacing and capitalization can be used however you like, although this varies from database to database (remember, we're using PostgreSQL)"},{"screenMd":"Let's take this query for example. Here we're listing  every column of our customer table out manually.\n\n```\nSELECT customer_id, first_name, last_name, \naddress, city, phone_number FROM customer\n```","screenText":"<p>Let&#39;s take this query for example. Here we&#39;re listing  every column of our customer table out manually.</p>\n<pre><code>SELECT customer_id, first_name, last_name, \naddress, city, phone_number FROM customer</code></pre>\n","keepSql":false,"sqlTarget":"","sqlExample":"SELECT customer_id, first_name, last_name, \naddress, city, phone_number FROM customer","startingSql":"","screenNumber":1},{"screenText":"<p>If we prefer, we can break the query up by line. The advantage of this style allows for better organization and visual-scanning of the query, which will come in handy as our queries get more complex. </p>\n<p>A quick glance tells us we are selecting a bunch of columns from 1 table.</p>\n<pre><code>SELECT \n    customer_id,\n    first_name,\n    last_name,\n    address,\n    city,\n    phone_number\nFROM \n    customer</code></pre>\n","keepSql":false,"sqlTarget":"","sqlExample":"SELECT \n\tcustomer_id,\n\tfirst_name,\n\tlast_name,\n\taddress,\n\tcity,\n\tphone_number\nFROM \n\tcustomer","startingSql":"","screenNumber":2,"screenMd":"If we prefer, we can break the query up by line. The advantage of this style allows for better organization and visual-scanning of the query, which will come in handy as our queries get more complex. \n\nA quick glance tells us we are selecting a bunch of columns from 1 table.\n\n```\nSELECT \n\tcustomer_id,\n\tfirst_name,\n\tlast_name,\n\taddress,\n\tcity,\n\tphone_number\nFROM \n\tcustomer\n```"},{"screenText":"<p>Usually SQL key words like <code>SELECT</code> and <code>FROM</code> are capitalized, but they don&#39;t necessarily have to be. Some people go all lower-case.</p>\n<pre><code>select \n    customer_id,\n    first_name,\n    last_name,\n    address,\n    city,\n    phone_number\nfrom \n    customer</code></pre>\n","keepSql":false,"sqlTarget":"","sqlExample":"select \n\tcustomer_id,\n\tfirst_name,\n\tlast_name,\n\taddress,\n\tcity,\n\tphone_number\nfrom \n\tcustomer","startingSql":"","screenNumber":3,"screenMd":"Usually SQL key words like ```SELECT``` and ```FROM``` are capitalized, but they don't necessarily have to be. Some people go all lower-case.\n\n```\nselect \n\tcustomer_id,\n\tfirst_name,\n\tlast_name,\n\taddress,\n\tcity,\n\tphone_number\nfrom \n\tcustomer\n```"},{"screenMd":"Some people like commas first. (It can sometimes help you spot missing commas)\n\n```\nselect \n\tcustomer_id\n\t,first_name\n\t,last_name\n\t,address\n\t,city\n\t,phone_number\nfrom \n\tcustomer\n```","screenText":"<p>Some people like commas first. (It can sometimes help you spot missing commas)</p>\n<pre><code>select \n    customer_id\n    ,first_name\n    ,last_name\n    ,address\n    ,city\n    ,phone_number\nfrom \n    customer</code></pre>\n","keepSql":false,"sqlTarget":"","sqlExample":"select \n\tcustomer_id\n\t,first_name\n\t,last_name\n\t,address\n\t,city\n\t,phone_number\nfrom \n\tcustomer","startingSql":"","screenNumber":4},{"screenText":"<p>Some database management systems are also flexible with the casing of table and column names. PostgreSQL is one of them, so this query would also work.</p>\n<pre><code>SELECT \n    CUSTOMER_ID,\n    FIRST_NAME\n    LAST_NAME,\n    ADDRESS,\n    CITY,\n    PHONE_NUMBER\nFROM \n    CUSTOMER</code></pre>\n","keepSql":false,"sqlTarget":"","sqlExample":"SELECT \n\tCUSTOMER_ID,\n\tFIRST_NAME\n\tLAST_NAME,\n\tADDRESS,\n\tCITY,\n\tPHONE_NUMBER\nFROM \n\tCUSTOMER","startingSql":"","screenNumber":5,"screenMd":"Some database management systems are also flexible with the casing of table and column names. PostgreSQL is one of them, so this query would also work.\n\n```\nSELECT \n\tCUSTOMER_ID,\n\tFIRST_NAME\n\tLAST_NAME,\n\tADDRESS,\n\tCITY,\n\tPHONE_NUMBER\nFROM \n\tCUSTOMER\n```"},{"screenText":"<p>As queries become more complicated, styling them can become somewhat of an art form. We won&#39;t get too much into it now, but we encourage you to try different styles out and get a feel for what works for you.</p>\n<p>Our only request is this: Try and be consistent, and try to follow the styles of the others around you writing SQL. Because the style and formatting may vary, it will help others read and understand your queries faster if everyone formats their SQL in a consistent manner.</p>\n","keepSql":false,"sqlTarget":"","sqlExample":"","startingSql":"","screenNumber":6,"screenMd":"As queries become more complicated, styling them can become somewhat of an art form. We won't get too much into it now, but we encourage you to try different styles out and get a feel for what works for you.\n\nOur only request is this: Try and be consistent, and try to follow the styles of the others around you writing SQL. Because the style and formatting may vary, it will help others read and understand your queries faster if everyone formats their SQL in a consistent manner."}],"nextLessonId":3,"nextLessonTitle":"Ordering Query Results","nextLessonListName":"The Basics"}