var config = require('../lib/config');var mysql = require('mysql');var pg = require('pg');var envConfig = config[process.env.NODE_ENV];var conString = "tcp://" + envConfig.user + ":" + envConfig.password + "@" + envConfig.host + "/" + envConfig.database;var appDb = exports;appDb.query = function (sql, params, handleResults) {	console.log(sql);	console.log(params);	pg.connect(conString, function(err, client) {		if (err) {			console.log('error connecting to pg');			console.log(err);			handleResults(err);			//pg.end();		} else {			//if (params.length) {				client.query(sql, params, function(err, result) {					if (err) {						console.log('error running query');						console.log(err);						handleResults(err);						//pg.end();					} else {						console.log(result.rows);						handleResults(err, result.rows);						//pg.end();					}				});			/*} else {				client.query(sql, function(err, result) {					if (err) {						console.log('error running query');						console.log(err);						handleResults(err);						//pg.end();					} else {						handleResults(err, result);						//pg.end();					}				});			}			*/		}	});		/*	var client = mysql.createClient(config.analystdb);		client.query(		sql,		params,		function appQueryCB(err, results, fields) {			if (err) {				console.log('App Query Error:');				console.log(err);				//throw err;			}			handleResults(err, results, fields);			client.end();		}	);		client.on("error", function(err) {		console.log('there was an error ' + err);		client.destroy();	});	*/}appDb.lesson = {	/*	clean: function (lesson) {		// Any JSON field needs to have the double escape quotes doubled again for mySQL		lesson.lessonScreens = lesson.lessonScreens.replace(/\\/gi, "\\\\");				// Any String field needs to have single apostrophe's escaped.		lesson.lessonScreens = lesson.lessonScreens.replace(/'/gi, "\\'");		lesson.lessonDescription = lesson.lessonDescription.replace(/'/gi, "\\'");		lesson.lessonTitle = lesson.lessonTitle.replace(/'/gi, "\\'");		return lesson;	},	*/		translateResults: function (results) {		var lessons = [];		var resultLength = results.length;		for (var i = 0; i < resultLength; i++) {						/*			console.log("");			console.log("translating results[i].screens...");			console.log(results[i].screens);			console.log("")			*/						var lesson = {				lessonId 			: results[i].lesson_id,				lessonTitle 		: results[i].title,				lessonDescription 	: results[i].description,				lessonScreens 		: JSON.parse(results[i].screens || "[]"),				lessonListId		: results[i].lessonlist_id,				lessonSeq			: results[i].seq			};			lessons.push(lesson);		}		return lessons	}};